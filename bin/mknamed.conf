#!/usr/local/bin/php -q
<?

require '../inc/lib.inc';

function usage() 
{
	print "
Usage: mknamed.conf bindserver
";
	exit(1);
}

function zone_def($domain, $masterip, $zonefile, $master, $masters)
{
	global $SLAVEIPS;
	if ($master && $masterip) {
		# Slave zone on the master server
		return "zone \"$domain\" {\n\ttype slave;\n\tmasters {\n\t\t$masterip;\n\t};\n\tfile \"$zonefile\";\n};\n\n";
	} elseif ($master) {
		# Master zone on the master server
		return "zone \"$domain\" {\n\ttype master;\n\tfile \"$zonefile\";\n\tallow-transfer { ".($SLAVEIPS ? $SLAVEIPS : "none")."; };\n};\n\n";
	} elseif (!$master && $masterip) {
		# Slave zone on the secondary server
		return "";
	} else {
		# Master zone on the secondary server
		return "zone \"$domain\" {\n\ttype slave;\n\tmasters {\n\t\t$masters;\n\t};\n\tfile \"$zonefile\";\n};\n\n";
	}
}

function zone_defs($master, $masters)
{
	$query = "SELECT domain, master, zonefile FROM zones WHERE domain != 'TEMPLATE'";
	$rid = sql_query($query);
	while(list($domain, $masterip, $zonefile) = mysql_fetch_row($rid)) {
		$result .= zone_def($domain, $masterip, $zonefile, $master, $masters);
	}
	return $result;
}

#
# MAIN
#
# Parse command line & set up parameters

$query = "SELECT type, zonedir, template FROM servers WHERE hostname = '$argv[1]'";
$rid = sql_query($query);
$row = mysql_fetch_array($rid);
mysql_free_result($rid);

# Initialize $SLAVES
$query = "SELECT ipno FROM servers WHERE type = 'S'";
$rid = sql_query($query);
if (mysql_num_rows($rid) > 0) {
	while ($slave = mysql_fetch_row($rid))
		$SLAVES[] = $slave[0];
	$SLAVEIPS = join("; ", $SLAVES);
} else {
	$SLAVEIPS = 0;
}
mysql_free_result($rid);

$zone_dir = $row['zonedir'];
$master = ($row['type'] == 'M');
$template = join("", file("$TOP/etc/".$row['template']));

if (!$master) {
	$query = "SELECT hostname, ipno FROM servers WHERE type = 'M'";
	$rid = sql_query($query);
	while ($row = mysql_fetch_array($rid)) {
		$masters[] = $row['ipno'];
	}
	mysql_free_result($rid);
}
if (is_array($masters))
	$MASTERS = join(";\n\t\t", $masters);
else
	$MASTERS = $masters;

$date = date("d-M-Y H:i");
$result = "# Generated for $argv[1] on $date\n#\n";

$zone_defs = zone_defs($master, $MASTERS);
$patterns = array('/\$ZONE_DIR/', '/\$ZONE_DEFINITIONS/');
$replacements = array($zone_dir, $zone_defs);
$result .= preg_replace($patterns, $replacements, $template);
print $result;

exit();

?>
